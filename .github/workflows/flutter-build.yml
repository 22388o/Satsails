name: Flutter Build APK and App Bundle

on:
  workflow_dispatch: # Apenas permite que o workflow seja acionado manualmente

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      FLUTTER_VERSION: '3.22.3'
      RUN_PIPELINE: 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install FVM
        if: env.RUN_PIPELINE == 'true'
        run: |
          curl -fsSL https://fvm.app/install.sh | bash
          export PATH="$PATH:$HOME/.fvm/bin"

      - name: Install Flutter with FVM
        if: env.RUN_PIPELINE == 'true'
        run: |
          fvm install ${{ env.FLUTTER_VERSION }}
          fvm use ${{ env.FLUTTER_VERSION }}
          fvm flutter --version

      - name: Create google-services.json
        if: env.RUN_PIPELINE == 'true'
        run: |
          echo "$GOOGLE_SERVICES_JSON" > $GITHUB_WORKSPACE/android/app/google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

      - name: Create key.properties
        if: env.RUN_PIPELINE == 'true'
        run: |
          echo "$KEY_PROPERTIES_FILE" > $GITHUB_WORKSPACE/android/key.properties
        env:
          KEY_PROPERTIES_FILE: ${{ secrets.KEY_PROPERTIES_FILE }}

      - name: Install dependencies
        if: env.RUN_PIPELINE == 'true'
        run: fvm flutter pub get --verbose

      - name: Build APK
        if: env.RUN_PIPELINE == 'true'
        run: fvm flutter build apk --release --verbose

      - name: Build App Bundle
        if: env.RUN_PIPELINE == 'true'
        run: fvm flutter build appbundle --release --verbose

      - name: Upload APK
        if: env.RUN_PIPELINE == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload App Bundle
        if: env.RUN_PIPELINE == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: app-release.aab
          path: build/app/outputs/bundle/release/app-release.aab
